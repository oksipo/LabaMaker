{"version":3,"file":"12.js","sources":["webpack:///./Client/app/+examples/text-editor/text-editor.component.ts","webpack:///./Client/app/+examples/text-editor/text-editor.component.scss","webpack:///./Client/app/+examples/text-editor/text-editor.component.html","webpack:///./Client/app/+examples/text-editor/simple-tiny.component.ts","webpack:///./Client/app/+examples/text-editor/text-editor.module.ts","webpack:///./Client/app/+examples/text-editor/text-editor.routes.ts","webpack:///./Client/app/+examples/text-editor/text-editor.component.scss?5769"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n// import '../../../../node_modules/tinymce/tinymce.js';\r\n// import '../../../../node_modules/tinymce/themes/modern/theme.js';\r\n// import '../../../../node_modules/tinymce/plugins/link/plugin.js';\r\n// import '../../../../node_modules/tinymce/plugins/paste/plugin.js';\r\n// import '../../../../node_modules/tinymce/plugins/table/plugin.js';\r\n\r\n@Component({\r\n  selector: 'appc-text-editor',\r\n  template: require('./text-editor.component.html'),\r\n  styles: [require('./text-editor.component.scss')]\r\n})\r\nexport class TextEditorComponent {\r\n  public keyupHandlerFunction(content: any) {\r\n    console.log(content);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/text-editor/text-editor.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./Client/app/+examples/text-editor/text-editor.component.scss\n// module id = 219\n// module chunks = 12","module.exports = \"<h3>\\r\\n    Tinymce text editor\\r\\n</h3>\\r\\n<p>\\r\\n    How to implement in <a href=\\\"https://www.tinymce.com/docs/integrations/angular2/\\\">angular</a>\\r\\n</p>\\r\\n<appc-simple-tiny [elementId]=\\\"'my-editor-id'\\\" (onEditorKeyup)=\\\"keyupHandlerFunction($event)\\\">\\r\\n</appc-simple-tiny>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/text-editor/text-editor.component.html\n// module id = 243\n// module chunks = 12","import { Component, OnDestroy, AfterViewInit, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { UtilityService } from '../../core/services/utility.service';\r\n\r\ndeclare const tinymce: any;\r\n\r\n@Component({\r\n    selector: 'appc-simple-tiny',\r\n    template: `<textarea id=\"{{elementId}}\"></textarea>`\r\n})\r\nexport class SimpleTinyComponent implements AfterViewInit, OnDestroy {\r\n    // Things worth noting are\r\n    // 1 - All plugins that you want to use has to be added to your angular-cli.json configuration file.\r\n    // 2 - TinyMCE needs a unique id to be able to show more than one editor at a time, so we send in an id string through\r\n    // an input from the parent component.\r\n    // 3 - To clean up and remove the editor when the SimpleTinyComponent is destroyed we first save a reference to the editor\r\n    // in the setup method when we initialize the editor and then, in the ngOnDestroy lifecycle hook, we run the tinymce.remove()\r\n    // function passing in this reference.\r\n    @Input()\r\n    public elementId: String;\r\n    @Output()\r\n    public onEditorKeyup = new EventEmitter<any>();\r\n    public editor: any;\r\n    constructor(private us: UtilityService) { }\r\n    public ngAfterViewInit() {\r\n        this.us.loadScript('https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.5/tinymce.min.js')\r\n            .subscribe(tm => {\r\n                this.us.loadScript('https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.5/themes/modern/theme.min.js')\r\n                    .subscribe(mt => {\r\n                        this.us.loadScript('https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.5/plugins/link/plugin.min.js')\r\n                            .subscribe(lp => {\r\n                                this.us.loadScript('https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.5/plugins/paste/plugin.min.js')\r\n                                    .subscribe(pp => {\r\n                                        this.us.loadScript('https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.5.5/plugins/noneditable/plugin.min.js')\r\n                                            .subscribe(nep => {\r\n                                                tinymce.init({\r\n                                                    selector: '#' + this.elementId,\r\n                                                    plugins: ['link', 'paste', 'table'],\r\n                                                    skin_url: '/assets/skins/lightgray',\r\n                                                    setup: (editor: any) => {\r\n                                                        this.editor = editor;\r\n                                                        editor.on('keyup', () => {\r\n                                                            const content = editor.getContent();\r\n                                                            this.onEditorKeyup.emit(content);\r\n                                                        });\r\n                                                    },\r\n                                                });\r\n                                            });\r\n                                    });\r\n                            });\r\n                    });\r\n\r\n            });\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        tinymce.remove(this.editor);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/text-editor/simple-tiny.component.ts","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { routing } from './text-editor.routes';\r\nimport { TextEditorComponent } from './text-editor.component';\r\nimport { SimpleTinyComponent } from './simple-tiny.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        routing,\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [\r\n        SimpleTinyComponent,\r\n        TextEditorComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class TextEditorModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/text-editor/text-editor.module.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TextEditorComponent } from './text-editor.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: TextEditorComponent\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/text-editor/text-editor.routes.ts","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./text-editor.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/text-editor/text-editor.component.scss\n// module id = 317\n// module chunks = 12"],"mappings":";;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AAHA;AACA;AACA;AACA;AAAA;AAJA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;;;;;ACAA;AAEA;AAQA;AAaA;AAAA;AAFA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAvCA;AADA;AACA;AAAA;AAEA;AADA;;AACA;AAXA;AAJA;AACA;AACA;AACA;AAcA;AAbA;AAAA;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACnBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}