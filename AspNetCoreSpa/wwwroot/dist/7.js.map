{"version":3,"file":"7.js","sources":["webpack:///./Client/app/+examples/reactive-forms/product.service.ts","webpack:///./Client/app/+examples/reactive-forms/product-detail/product-detail.component.ts","webpack:///./Client/app/+examples/reactive-forms/product-edit/product-edit.component.ts","webpack:///./Client/app/+examples/reactive-forms/product-guard.service.ts","webpack:///./Client/app/+examples/reactive-forms/product-list/product-list.component.ts","webpack:///./Client/app/+examples/reactive-forms/components/star.component.scss","webpack:///./Client/app/+examples/reactive-forms/product-list/product-list.component.scss","webpack:///./Client/app/+examples/reactive-forms/components/star.component.html","webpack:///./Client/app/+examples/reactive-forms/product-detail/product-detail.component.html","webpack:///./Client/app/+examples/reactive-forms/product-edit/product-edit.component.html","webpack:///./Client/app/+examples/reactive-forms/product-list/product-list.component.html","webpack:///./Client/app/+examples/reactive-forms/components/star.component.ts","webpack:///./Client/app/+examples/reactive-forms/product-filter.pipe.ts","webpack:///./Client/app/+examples/reactive-forms/product.module.ts","webpack:///./Client/app/+examples/reactive-forms/product.routes.ts","webpack:///./Client/app/+examples/reactive-forms/validators/generic-validator.ts","webpack:///./Client/app/+examples/reactive-forms/validators/number.validator.ts","webpack:///./Client/app/+examples/reactive-forms/components/star.component.scss?2c93","webpack:///./Client/app/+examples/reactive-forms/product-list/product-list.component.scss?ebd8"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { IProduct } from './product';\r\nimport { DataService } from '../../core/services/data.service';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    private baseUrl = 'api/product';\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    public getProducts(): Observable<any> {\r\n        return this.dataService.get(this.baseUrl);\r\n    }\r\n\r\n    public getProduct(id: string): Observable<any> {\r\n        if (id === '0') {\r\n            return Observable.of(this.initializeProduct());\r\n        }\r\n        const url = `${this.baseUrl}/${id}`;\r\n        return this.dataService.get(url);\r\n    }\r\n\r\n    public deleteProduct(id: string): Observable<any> {\r\n        const url = `${this.baseUrl}/${id}`;\r\n        return this.dataService.delete(url);\r\n    }\r\n\r\n    public saveProduct(product: IProduct): Observable<Response> {\r\n        if (product._id === '0') {\r\n            return this.createProduct(product);\r\n        }\r\n        return this.updateProduct(product);\r\n    }\r\n\r\n    private createProduct(product: IProduct): Observable<Response> {\r\n        product._id = '';\r\n        return this.dataService.post(this.baseUrl, product);\r\n    }\r\n\r\n    private updateProduct(product: IProduct): Observable<Response> {\r\n        const url = `${this.baseUrl}/${product._id}`;\r\n        return this.dataService.put(url, product);\r\n    }\r\n\r\n    private initializeProduct(): IProduct {\r\n        // Return an initialized object\r\n        return {\r\n            _id: '0',\r\n            productName: '',\r\n            productCode: '',\r\n            tags: [''],\r\n            releaseDate: '',\r\n            price: 0,\r\n            description: '',\r\n            starRating: 0,\r\n            imageUrl: ''\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product.service.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { IProduct } from '../product';\r\nimport { ProductService } from '../product.service';\r\n\r\n@Component({\r\n    template: require('./product-detail.component.html')\r\n})\r\nexport class ProductDetailComponent implements OnInit, OnDestroy {\r\n    public pageTitle = 'Product Detail';\r\n    public product: IProduct;\r\n    public errorMessage: string;\r\n    public sub: Subscription;\r\n\r\n    constructor(\r\n        public route: ActivatedRoute,\r\n        public router: Router,\r\n        public productService: ProductService) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.sub = this.route.params.subscribe(\r\n            params => {\r\n                const id = params['_id'];\r\n                this.getProduct(id);\r\n            });\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n    public getProduct(id: string) {\r\n        this.productService.getProduct(id).subscribe(\r\n            product => this.product = product,\r\n            // tslint:disable-next-line:whitespace\r\n            error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    public onBack(): void {\r\n        this.router.navigate(['examples/reactiveforms']);\r\n    }\r\n\r\n    public onRatingClicked(message: string): void {\r\n        this.pageTitle = 'Product Detail: ' + message;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product-detail/product-detail.component.ts","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef, QueryList } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { IProduct } from '../product';\r\nimport { ProductService } from '../product.service';\r\n\r\nimport { NumberValidators } from '../validators/number.validator';\r\nimport { GenericValidator } from '../validators/generic-validator';\r\n\r\n@Component({\r\n    template: require('./product-edit.component.html')\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    // tslint:disable-next-line:member-access\r\n    @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: QueryList<any>;\r\n\r\n    public pageTitle = 'Product Edit';\r\n    public errorMessage: string;\r\n    public productForm: FormGroup;\r\n    public product: IProduct;\r\n    public sub: Subscription;\r\n    // Use with the generic validation message class\r\n    public displayMessage: any = {};\r\n    public validationMessages: any = {};\r\n    public genericValidator: GenericValidator;\r\n\r\n    public get tags(): FormArray {\r\n        // tslint:disable-next-line:whitespace\r\n        return <FormArray>this.productForm.get('tags');\r\n    }\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private productService: ProductService) {\r\n\r\n        // Defines all of the validation messages for the form.\r\n        // These could instead be retrieved from a file or database.\r\n        this.validationMessages = {\r\n            productName: {\r\n                required: 'Product name is required.',\r\n                minlength: 'Product name must be at least three characters.',\r\n                maxlength: 'Product name cannot exceed 50 characters.'\r\n            },\r\n            productCode: {\r\n                required: 'Product code is required.'\r\n            },\r\n            starRating: {\r\n                range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n            }\r\n        };\r\n\r\n        // Define an instance of the validator for use with this form,\r\n        // passing in this form's set of validation messages.\r\n        this.genericValidator = new GenericValidator(this.validationMessages);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.productForm = this.fb.group({\r\n            productName: ['', [Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(50)]],\r\n            productCode: ['', Validators.required],\r\n            starRating: ['', NumberValidators.range(1, 5)],\r\n            tags: this.fb.array([]),\r\n            description: ''\r\n        });\r\n\r\n        // Read the product Id from the route parameter\r\n        this.sub = this.route.params.subscribe(\r\n            params => {\r\n                const id = params['_id'];\r\n                this.getProduct(id);\r\n            }\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        // Watch for the blur event from any input element on the form.\r\n        const controlBlurs = this.formInputElements\r\n            .map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n        // Merge the blur event observable with the valueChanges observable\r\n        Observable\r\n            .merge(this.productForm.valueChanges, ...controlBlurs)\r\n            .debounceTime(800)\r\n            .subscribe(value => {\r\n                this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n            });\r\n    }\r\n\r\n    public addTag(): void {\r\n        this.tags.push(new FormControl());\r\n    }\r\n\r\n    public getProduct(id: string): void {\r\n        this.productService.getProduct(id)\r\n            .subscribe(\r\n            (product: IProduct) => this.onProductRetrieved(product),\r\n            // tslint:disable-next-line:whitespace\r\n            (error: any) => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    public onProductRetrieved(product: IProduct): void {\r\n        if (this.productForm) {\r\n            this.productForm.reset();\r\n        }\r\n        this.product = product;\r\n\r\n        if (this.product._id === '0') {\r\n            this.pageTitle = 'Add Product';\r\n        } else {\r\n            this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n        }\r\n\r\n        // Update the data on the form\r\n        this.productForm.patchValue({\r\n            productName: this.product.productName,\r\n            productCode: this.product.productCode,\r\n            starRating: this.product.starRating,\r\n            description: this.product.description\r\n        });\r\n        this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\r\n    }\r\n\r\n    public deleteProduct(): void {\r\n        if (this.product._id === '0') {\r\n            // Don't delete, it was never saved.\r\n            this.onSaveComplete();\r\n        } else {\r\n            if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n                this.productService.deleteProduct(this.product._id)\r\n                    .subscribe(\r\n                    () => this.onSaveComplete(),\r\n                    // tslint:disable-next-line:whitespace\r\n                    (error: any) => this.errorMessage = <any>error\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\n    public saveProduct(): void {\r\n        if (this.productForm.dirty && this.productForm.valid) {\r\n            // Copy the form values over the product object values\r\n            const p = Object.assign({}, this.product, this.productForm.value);\r\n\r\n            this.productService.saveProduct(p)\r\n                .subscribe(\r\n                () => this.onSaveComplete(),\r\n                // tslint:disable-next-line:whitespace\r\n                (error: any) => this.errorMessage = <any>error\r\n                );\r\n        } else if (!this.productForm.dirty) {\r\n            this.onSaveComplete();\r\n        }\r\n    }\r\n\r\n    public onSaveComplete(): void {\r\n        // Reset the form to clear the flags\r\n        this.productForm.reset();\r\n        this.router.navigate(['examples/reactiveforms']);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product-edit/product-edit.component.ts","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, CanDeactivate } from '@angular/router';\r\n\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\n\r\n@Injectable()\r\nexport class ProductDetailGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    public canActivate(route: ActivatedRouteSnapshot): boolean {\r\n        const id = route.url[1].path;\r\n        if (!id) {\r\n            alert('Invalid product Id');\r\n            // start a new navigation to redirect to list page\r\n            this.router.navigate(['examples/reactiveforms']);\r\n            // abort current navigation\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\n@Injectable()\r\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\r\n\r\n    public canDeactivate(component: ProductEditComponent): boolean {\r\n        if (component.productForm) {\r\n            const productName = (<any>component).productForm.get('productName').value || 'New Product';\r\n            return confirm(`Navigate away and lose all changes to ${productName}?`);\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product-guard.service.ts","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { IProduct } from '../product';\r\nimport { ProductService } from '../product.service';\r\n\r\n@Component({\r\n    template: require('./product-list.component.html'),\r\n    styles: [require('./product-list.component.scss')]\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    public pageTitle = 'Product List';\r\n    public imageWidth = 50;\r\n    public imageMargin = 2;\r\n    public showImage = false;\r\n    public listFilter: string;\r\n    public errorMessage: string;\r\n\r\n    public products: IProduct[];\r\n\r\n    constructor(private productService: ProductService) { }\r\n\r\n    public toggleImage(): void {\r\n        this.showImage = !this.showImage;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.productService.getProducts()\r\n            .subscribe(products => this.products = products,\r\n            // tslint:disable-next-line:whitespace\r\n            error => this.errorMessage = <any>error);\r\n    }\r\n\r\n    public onRatingClicked(message: string): void {\r\n        this.pageTitle = 'Product List: ' + message;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product-list/product-list.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".crop {\\n  overflow: hidden; }\\n\\ndiv {\\n  cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./Client/app/+examples/reactive-forms/components/star.component.scss\n// module id = 225\n// module chunks = 7","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"thead {\\n  color: #337AB7; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./Client/app/+examples/reactive-forms/product-list/product-list.component.scss\n// module id = 226\n// module chunks = 7","module.exports = \"<div class=\\\"crop\\\" \\r\\n    [style.width.px]=\\\"starWidth\\\"\\r\\n    [title]=\\\"rating\\\"\\r\\n    (click)='onClick()'>\\r\\n    <div style=\\\"width: 86px\\\">\\r\\n        <span class=\\\"fa fa-star\\\"></span>\\r\\n        <span class=\\\"fa fa-star\\\"></span>\\r\\n        <span class=\\\"fa fa-star\\\"></span>\\r\\n        <span class=\\\"fa fa-star\\\"></span>\\r\\n        <span class=\\\"fa fa-star\\\"></span>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/components/star.component.html\n// module id = 247\n// module chunks = 7","module.exports = \"<div class=\\\"panel panel-primary\\\" *ngIf=\\\"product\\\">\\r\\n    <div class=\\\"panel-heading\\\" style=\\\"font-size:large\\\">\\r\\n        {{pageTitle + \\\": \\\" + product.productName}}\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Name:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.productName}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Code:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.productCode}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Description:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.description}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Availability:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.releaseDate}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Price:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.price|currency:\\\"USD\\\":true}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">5 Star Rating:</div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <appc-ai-star [rating]=\\\"product.starRating\\\"\\r\\n                                (ratingClicked)=\\\"onRatingClicked($event)\\\">\\r\\n                        </appc-ai-star>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">Tags:</div>\\r\\n                    <div class=\\\"col-md-6\\\">{{product.tags}}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"product.imageUrl\\\">\\r\\n                <img class=\\\"center-block img-responsive\\\" \\r\\n                     [style.width.px]=\\\"200\\\" \\r\\n                     [style.margin.px]=\\\"2\\\" \\r\\n                     [src]=\\\"product.imageUrl\\\"\\r\\n                     [title]=\\\"product.productName\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n        <a class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\" style=\\\"width:80px\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-chevron-left\\\"></i> Back\\r\\n        </a>\\r\\n        <a class=\\\"btn btn-primary\\\" style=\\\"width:80px;margin-left:10px\\\" \\r\\n           [routerLink]=\\\"['/examples/reactiveforms/productEdit', product._id]\\\">\\r\\n            Edit\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/product-detail/product-detail.component.html\n// module id = 248\n// module chunks = 7","module.exports = \"<div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n        {{pageTitle}}\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <form class=\\\"form-horizontal\\\"\\r\\n              (ngSubmit)=\\\"saveProduct()\\\"\\r\\n              [formGroup]=\\\"productForm\\\" >\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\" \\r\\n                     [ngClass]=\\\"{'has-error': displayMessage.productName }\\\">\\r\\n                    <label class=\\\"col-md-2 control-label\\\" for=\\\"productNameId\\\">Product Name</label>\\r\\n\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <input class=\\\"form-control\\\" \\r\\n                                id=\\\"productNameId\\\" \\r\\n                                type=\\\"text\\\" \\r\\n                                placeholder=\\\"Name (required)\\\" \\r\\n                                formControlName=\\\"productName\\\" />\\r\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"displayMessage.productName\\\">\\r\\n                                {{displayMessage.productName}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group\\\" \\r\\n                     [ngClass]=\\\"{'has-error': displayMessage.productCode}\\\">\\r\\n                    <label class=\\\"col-md-2 control-label\\\" for=\\\"productCodeId\\\">Product Code</label>\\r\\n\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <input class=\\\"form-control\\\" \\r\\n                                id=\\\"productCodeId\\\" \\r\\n                                type=\\\"text\\\" \\r\\n                                placeholder=\\\"Code (required)\\\" \\r\\n                                formControlName=\\\"productCode\\\" />\\r\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"displayMessage.productCode\\\">\\r\\n                                {{displayMessage.productCode}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': displayMessage.starRating}\\\">\\r\\n                    <label class=\\\"col-md-2 control-label\\\" for=\\\"starRatingId\\\">Star Rating (1-5)</label>\\r\\n\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <input class=\\\"form-control\\\" \\r\\n                                id=\\\"starRatingId\\\" \\r\\n                                type=\\\"text\\\" \\r\\n                                placeholder=\\\"Rating\\\" \\r\\n                                formControlName=\\\"starRating\\\" />\\r\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"displayMessage.starRating\\\">\\r\\n                                {{displayMessage.starRating}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div formArrayName=\\\"tags\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <button class=\\\"btn btn-default\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                (click)=\\\"addTag()\\\">Add Tag\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                        *ngFor=\\\"let tag of tags.controls; let i=index\\\" >\\r\\n                        <label class=\\\"col-md-2 control-label\\\" [attr.for]=\\\"i\\\">Tag</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" \\r\\n                                    [id]=\\\"i\\\" \\r\\n                                    type=\\\"text\\\" \\r\\n                                    placeholder=\\\"Tag\\\" \\r\\n                                    [formControlName]=\\\"i\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': displayMessage.description}\\\">\\r\\n                    <label class=\\\"col-md-2 control-label\\\" for=\\\"descriptionId\\\">Description</label>\\r\\n\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <textarea class=\\\"form-control\\\" \\r\\n                                id=\\\"descriptionId\\\" \\r\\n                                placeholder=\\\"Description\\\"\\r\\n                                rows=3\\r\\n                                formControlName=\\\"description\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"displayMessage.description\\\">\\r\\n                                {{ displayMessage.description}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n                        <span>\\r\\n                            <button class=\\\"btn btn-primary\\\"\\r\\n                                    type=\\\"submit\\\"\\r\\n                                    style=\\\"width:80px;margin-right:10px\\\"\\r\\n                                    [disabled]='!productForm.valid'>\\r\\n                                Save\\r\\n                            </button>\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            <a class=\\\"btn btn-default\\\"\\r\\n                               style=\\\"width:80px\\\"\\r\\n                               [routerLink]=\\\"['../../']\\\">\\r\\n                                Cancel\\r\\n                            </a>\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            <a class=\\\"btn btn-default\\\"\\r\\n                               style=\\\"width:80px\\\"\\r\\n                               (click)=\\\"deleteProduct()\\\">\\r\\n                                Delete\\r\\n                            </a>\\r\\n                        </span>       \\r\\n                     </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n        <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/product-edit/product-edit.component.html\n// module id = 249\n// module chunks = 7","module.exports = \"<div class='panel panel-primary'>\\r\\n    <div class='panel-heading'>\\r\\n        {{pageTitle}}\\r\\n    </div>\\r\\n\\r\\n    <!-- Filter the Products   -->\\r\\n    <div class='panel-body'>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-2'>Filter by:</div>\\r\\n            <div class='col-md-4'>\\r\\n                <input type='text' [(ngModel)]='listFilter' />\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class='row' *ngIf='listFilter'>\\r\\n            <div class='col-md-6'>\\r\\n                <h3>Filtered by: {{listFilter}} </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\\r\\n\\r\\n        <div class='table-responsive'>\\r\\n            <table class='table'\\r\\n                   *ngIf='products && products.length'>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>\\r\\n                            <button class='btn btn-primary'\\r\\n                                (click)='toggleImage()'>\\r\\n                                {{showImage ? 'Hide' : 'Show'}} Image\\r\\n                            </button>\\r\\n                        </th>\\r\\n                        <th>Product</th>\\r\\n                        <th>Code</th>\\r\\n                        <th>Available</th>\\r\\n                        <th>Price</th>\\r\\n                        <th>5 Star Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let product of products | productFilter:listFilter'>\\r\\n                        <td>\\r\\n                            <img *ngIf='showImage && product.imageUrl'\\r\\n                                 [src]='product.imageUrl'\\r\\n                                 [title]='product.productName | uppercase'\\r\\n                                 [style.width.px]='imageWidth' \\r\\n                                 [style.margin.px]='imageMargin'>\\r\\n                        </td>\\r\\n                        <td><a [routerLink]=\\\"['product', product._id]\\\">\\r\\n                            {{product.productName}}\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td>{{ product.productCode | lowercase }}</td>\\r\\n                        <td>{{ product.releaseDate }}</td>\\r\\n                        <td>{{ product.price | currency:'GBP':true:'1.2-2' }}</td>\\r\\n                        <td>\\r\\n                            <appc-ai-star [rating]='product.starRating'\\r\\n                                    (ratingClicked)='onRatingClicked($event)'>\\r\\n                            </appc-ai-star>\\r\\n                       </td>\\r\\n                       <td>\\r\\n                            <a class=\\\"btn btn-primary\\\" \\r\\n                               [routerLink]=\\\"['productEdit', product._id]\\\">\\r\\n                                Edit\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/product-list/product-list.component.html\n// module id = 250\n// module chunks = 7","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'appc-ai-star',\r\n    template: require('./star.component.html'),\r\n    styles: [require('./star.component.scss')]\r\n})\r\n\r\nexport class StarComponent implements OnChanges {\r\n    @Input() public rating: number;\r\n    public starWidth: number;\r\n    @Output() public ratingClicked = new EventEmitter<string>();\r\n\r\n    public ngOnChanges(changes: any): void {\r\n        // Convert x out of 5 starts\r\n        // to y out of 86px width\r\n        this.starWidth = this.rating * 86 / 5;\r\n    }\r\n\r\n    public onClick(): void {\r\n        this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/components/star.component.ts","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { IProduct } from './product';\r\n\r\n// tslint:disable-next-line:use-pipe-transform-interface\r\n@Pipe({\r\n    // tslint:disable-next-line:pipe-naming\r\n    name: 'productFilter'\r\n})\r\nexport class ProductFilterPipe implements PipeTransform {\r\n\r\n    public transform(value: IProduct[], filterBy: string): IProduct[] {\r\n        filterBy = filterBy ? filterBy.toLocaleLowerCase() : '';\r\n        return filterBy ? value.filter((product: IProduct) =>\r\n            product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1) : value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product-filter.pipe.ts","import { NgModule } from '@angular/core';\r\n\r\nimport { StarComponent } from './components/star.component';\r\nimport { SharedModule } from './../../shared/shared.module';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\nimport { ProductDetailGuard, ProductEditGuard } from './product-guard.service';\r\n\r\nimport { ProductFilterPipe } from './product-filter.pipe';\r\nimport { ProductService } from './product.service';\r\nimport { routing } from './product.routes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductEditComponent,\r\n    ProductDetailComponent,\r\n    ProductFilterPipe,\r\n    StarComponent\r\n  ],\r\n  providers: [\r\n    ProductService,\r\n    ProductDetailGuard,\r\n    ProductEditGuard\r\n  ]\r\n})\r\nexport class ReactiveFormsExampleModules { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product.module.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\nimport { ProductDetailGuard, ProductEditGuard } from './product-guard.service';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ProductListComponent },\r\n    { path: 'product/:_id', canActivate: [ProductDetailGuard], component: ProductDetailComponent },\r\n    { path: 'productEdit/:_id', canDeactivate: [ProductEditGuard], component: ProductEditComponent }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/product.routes.ts","import { FormGroup } from '@angular/forms';\r\n\r\n// Generic validator for Reactive forms\r\n// Implemented as a class, not a service, so it can retain state for multiple forms.\r\nexport class GenericValidator {\r\n\r\n    // Provide the set of valid validation messages\r\n    // Stucture:\r\n    // controlName1: {\r\n    //     validationRuleName1: 'Validation Message.',\r\n    //     validationRuleName2: 'Validation Message.'\r\n    // },\r\n    // controlName2: {\r\n    //     validationRuleName1: 'Validation Message.',\r\n    //     validationRuleName2: 'Validation Message.'\r\n    // }\r\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) { }\r\n\r\n    // Processes each control within a FormGroup\r\n    // And returns a set of validation messages to display\r\n    // Structure\r\n    // controlName1: 'Validation Message.',\r\n    // controlName2: 'Validation Message.'\r\n    public processMessages(container: FormGroup): { [key: string]: string } {\r\n        const messages: any = {};\r\n        for (const controlKey in container.controls) {\r\n            if (container.controls.hasOwnProperty(controlKey)) {\r\n                const c = container.controls[controlKey];\r\n                // If it is a FormGroup, process its child controls.\r\n                if (c instanceof FormGroup) {\r\n                    const childMessages = this.processMessages(c);\r\n                    Object.assign(messages, childMessages);\r\n                } else {\r\n                    // Only validate if there are validation messages for the control\r\n                    if (this.validationMessages[controlKey]) {\r\n                        messages[controlKey] = '';\r\n                        if ((c.dirty || c.touched) && c.errors) {\r\n                            Object.keys(c.errors).map(messageKey => {\r\n                                if (this.validationMessages[controlKey][messageKey]) {\r\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return messages;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/validators/generic-validator.ts","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class NumberValidators {\r\n\r\n    public static range(min: number, max: number): any {\r\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n            if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n                return { range: true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./Client/app/+examples/reactive-forms/validators/number.validator.ts","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./star.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/components/star.component.scss\n// module id = 323\n// module chunks = 7","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./product-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Client/app/+examples/reactive-forms/product-list/product-list.component.scss\n// module id = 324\n// module chunks = 7"],"mappings":";;;;;;;;;AAAA;AAGA;AAGA;AAGA;AAGA;AAAA;AAFA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AArDA;AADA;AAIA;AAHA;AAAA;;;;;;;;;;;;ACTA;AACA;AAKA;AAKA;AAMA;AACA;AACA;AACA;AARA;AASA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAtCA;AAHA;AACA;AACA;AAQA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAKA;AAmBA;AACA;AACA;AACA;AACA;AAnBA;AAKA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA9BA;AAAA;AACA;AACA;AACA;;;AAAA;AA6BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1JA;AAAA;AAAA;AAAA;AAFA;AAHA;AACA;AACA;AAqBA;AACA;AACA;AACA;AAvBA;AAAA;;;;;;;;;;;;AChBA;AACA;AAKA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAfA;AADA;AAGA;AAFA;AAAA;AAiBA;AAEA;AAAA;AASA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AADA;AACA;AAAA;;;;;;;;;;;;ACzBA;AAGA;AAMA;AAUA;AAAA;AATA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA1BA;AAJA;AACA;AACA;AACA;AAWA;AAVA;AAAA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;ACAA;AAQA;AANA;AASA;AAWA;AATA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAbA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAHA;AANA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;ACRA;AAGA;AAKA;AAAA;AAOA;AALA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAPA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACRA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AC/BA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBA;AAAA;AAqBA;AACA;AACA;AACA;AAAA;AA7CA;;;;;;;;;;;ACFA;AAAA;AAUA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}